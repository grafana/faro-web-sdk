{
  "resourceLogs": [
    {
      "resource": {
        "attributes": [
          // Taken from BROWSER CONVENTIONS. Some may differ from Faro, some only exist in Faro.
          // https://opentelemetry.io/docs/reference/specification/resource/semantic_conventions/browser/
          {
            "key": "browser.brands", // OTEL SEMANTIC CONVENTIONS
            // DISCUSS WITH TEAM
            // The conventions say that this should be the browser name and the version in the same string
            // Querying will be hard if we do this
            // For example we can't extract easily what browser names are used or what versions for a specific name
            "value": { "arrayValue": ["Firefox 109.0"] }
          },
          {
            "key": "browser.mobile", // OTEL SEMANTIC CONVENTIONS
            "value": { "boolValue": false }
          },
          {
            "key": "browser.name", // FARO
            // DISCUSS WITH TEAM
            // Same as browser.brands. We have it just to access the name more easily
            "value": { "stringValue": "Firefox" }
          },
          {
            "key": "browser.version", // FARO
            // DISCUSS WITH TEAM
            // Same as browser.brands. We have it just to access the version more easily
            "value": { "stringValue": "109.0" }
          },
          {
            "key": "browser.os.version", // FARO
            // DISCUSS WITH TEAM
            // How shall we name this one as the browser.platform only contains the name and not the version
            "value": { "stringValue": "13.2" }
          },
          {
            "key": "browser.platform", // OTEL SEMANTIC CONVENTIONS
            // DISCUSS WITH THE TEAM
            // This only contains the OS name while we sent the version as well. Shall this be similar to browser name/version?
            "value": { "stringValue": "Mac OS" }
          },

          // Taken from TELEMETRY CONVENTIONS. Some may differ from Faro, some only exist in Faro.
          // https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/resource/semantic_conventions/README.md#telemetry-sdk
          {
            "key": "telemetry.sdk.name", // OTEL SEMANTIC CONVENTIONS
            "value": { "stringValue": "@grafana/faro-core" }
          },
          {
            "key": "telemetry.sdk.language", // OTEL SEMANTIC CONVENTIONS
            "value": { "stringValue": "webjs" } // or nodejs
          },
          {
            "key": "telemetry.sdk.version", // OTEL SEMANTIC CONVENTIONS
            "value": { "stringValue": "1.0.0-beta2" }
          },

          {
            "key": "service.name", // OTEL SEMANTIC CONVENTIONS
            "value": { "stringValue": "foo" }
          },
          {
            "key": "app.release", // FARO
            // DISCUSS WITH TEAM
            // Shall we remove this one or rename this to service.namespace?
            "value": { "stringValue": "6.6.7." }
          },
          {
            "key": "service.version", // OTEL SEMANTIC CONVENTIONS
            "value": { "stringValue": "1.23" }
          },
          {
            "key": "deployment.environment", // OTEL SEMANTIC CONVENTIONS
            "value": { "stringValue": "production" }
          }
        ]
      },

      "scopeLogs": [
        {
          // The scope should originate from the instrumentation that captured this
          // For the time being we don't have this information
          // We will use the sdk as the source of information
          // DISCUSS WITH TEAM
          // Shall this be faro-core or faro-web-sdk?
          "scope": {
            "name": "@grafana/faro-core",
            "version": "1.0.0-beta4"
          },
          "logRecords": [
            // +++ EVENT +++
            {
              // We convert the timestamp to milliseconds and then multiply them by 1 million
              // The timestamp comes from the timestamp property on the payload
              "timeUnixNano": 1674464646296000000,
              "attributes": [
                // Taken from SEMANTIC CONVENTION FOR EVENT ATTRIBUTES. Some may differ from Faro, some only exist in Faro.
                // https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/logs/semantic_conventions/events.md
                {
                  "key": "event.name", // OTEL SEMANTIC CONVENTIONS
                  "value": { "stringValue": "click_button_with_attributes" }
                },
                {
                  "key": "event.domain", // OTEL SEMANTIC CONVENTIONS
                  "value": { "stringValue": "browser" }
                },
                {
                  "key": "event.attributes", // FARO
                  "value": {
                    "kvlistValue": [
                      {
                        "key": "foo",
                        "value": { "stringValue": "bar" }
                      },
                      {
                        "key": "baz",
                        "value": { "stringValue": "bad" }
                      }
                    ]
                  }
                },
                {
                  "key": "view.name", // FARO
                  "value": { "stringValue": "default" }
                },
                {
                  "key": "http.url", // OTEL SEMANTIC CONVENTIONS
                  "value": { "stringValue": "http://localhost:5173" }
                },
                {
                  "key": "page.url", // FARO
                  // DISCUSS WITH TEAM
                  // The page meta may also contain page.id and page.attributes
                  // Shall we remove those? or add them as page.id and page.attributes attributes?
                  // Shall we remove page.url as we already have http.url? if so, how will the above be named
                  "value": { "stringValue": "http://localhost:5173" }
                },
                {
                  "key": "session.id", // FARO
                  "value": { "stringValue": "abcdefg" }
                },
                {
                  "key": "session.attributes", // FARO
                  "value": { "kvlistValue": [] }
                },

                // Taken from GENERAL IDENDITY ATTRIBUTES. Some may differ from Faro, some only exist in Faro.
                // https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/span-general.md#general-identity-attributes
                {
                  "key": "enduser.id", // OTEL SEMANTIC CONVENTIONS
                  "value": { "stringValue": "119" }
                },
                {
                  "key": "enduser.name", // FARO
                  "value": { "stringValue": "119" }
                },
                {
                  "key": "enduser.email", // FARO
                  "value": { "stringValue": "119" }
                },
                {
                  "key": "enduser.attributes", // FARO
                  "value": { "kvlistValue": [] }
                }
              ],
              // The following are taken from the trace property
              // We can just omit them if they don't exist in the original payload
              "traceId": "582d698467d6d4edd62011c11335a13d",
              "spanId": "e0668e8ad9e6badc"
            },

            // +++ ERROR +++
            {
              // We convert the timestamp to milliseconds and then multiply them by 1 million
              // The timestamp comes from the timestamp property on the payload
              "timeUnixNano": 1674468151431000000,
              "attributes": [
                {
                  "key": "faro.error.stacktrace", // FARO
                  // DISCUSS WITH TEAM
                  // OTel says that stacktrace should be a string
                  // We have it parsed and it's easier to make use of it as parsed
                  // What shall we do with it?
                  // How should we name it?
                  "value": {
                    "kvlistValue": [
                      {
                        "key": "filename",
                        "value": {
                          "arrayValue": {
                            "values": [
                              {
                                "stringValue": "http://localhost:5173/src/client/pages/Features/ErrorInstrumentation.tsx"
                              },
                              {
                                "stringValue": "http://localhost:5173/node_modules/.vite/deps/chunk-63FLCSTF.js?v=502c6d22"
                              },
                              {
                                "stringValue": "http://localhost:5173/node_modules/.vite/deps/@opentelemetry_context-zone.js?v=02a1e0ae"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "key": "function",
                        "value": {
                          "arrayValue": {
                            "values": [
                              { "stringValue": "throwError" },
                              { "stringValue": "HTMLUnknownElement.callCallback2" },
                              { "stringValue": "_ZoneDelegate.invokeTask" }
                            ]
                          }
                        }
                      },
                      {
                        "key": "lineno",
                        "value": {
                          "arrayValue": {
                            "values": [{ "intValue": 21 }, { "intValue": 3674 }, { "intValue": 460 }]
                          }
                        }
                      },
                      {
                        "key": "colno",
                        "value": {
                          "arrayValue": {
                            "values": [{ "intValue": 11 }, { "intValue": 22 }, { "intValue": 171 }]
                          }
                        }
                      }
                    ]
                  }
                },
                // Taken from Semantic CONVENTIONS FOR EXCEPTIONS. Some may differ from Faro, some only exist in Faro.
                // https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/logs/semantic_conventions/exceptions.md
                {
                  "key": "exception.message", // OTEL SEMANTIC CONVENTIONS
                  "value": { "stringValue": "The exception message." }
                },
                {
                  "key": "exception.stacktrace", // OTEL SEMANTIC CONVENTIONS
                  "value": { "stringValue": "The unparsed stacktrace" }
                },
                {
                  "key": "exception.type", // OTEL SEMANTIC CONVENTIONS
                  "value": { "stringValue": "Exception type. We have it from the Faro payload" }
                },

                {
                  "key": "view.name", // FARO
                  "value": { "stringValue": "default" }
                },
                {
                  "key": "http.url", // FARO
                  // Same discussion as from event htto.url and page.id and page.attributes
                  "value": { "stringValue": "http://localhost:5173" }
                },
                {
                  "key": "session.id", // FARO
                  "value": { "stringValue": "abcdefg" }
                },
                {
                  "key": "session.attributes", // FARO
                  "value": { "kvlistValue": [] }
                },

                // Taken from GENERAL IDENDITY ATTRIBUTES. Some may differ from Faro, some only exist in Faro.
                // https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/span-general.md#general-identity-attributes
                {
                  "key": "enduser.id", // OTEL SEMANTIC CONVENTIONS
                  "value": { "stringValue": "119" }
                },
                {
                  "key": "enduser.name", // FARO
                  "value": { "stringValue": "119" }
                },
                {
                  "key": "enduser.email", // FARO
                  "value": { "stringValue": "119" }
                },
                {
                  "key": "enduser.attributes", // FARO
                  "value": { "kvlistValue": [] }
                }
              ],
              // The following are taken from the trace property
              // We can just omit them if they don't exist in the original payload
              "traceId": "33cd71f73e44814794b2472917c71f81",
              "spanId": "00fdd358b506931a"
            },

            // +++ LOG +++
            {
              // We convert the timestamp to milliseconds and then multiply them by 1 million
              // The timestamp comes from the timestamp property on the payload
              "timeUnixNano": 1674472561805000000,
              // DISCUSS WITH TEAM
              // For severity we can have the following convention:
              // console.log - 10 / INFO2 -> this is a special case
              // console.trace - 1 / TRACE
              // console.debug - 5 / DEBUG
              // console.info - 9 / INFO
              // console.warn - 13 / WARN
              // console.error - 17 / ERROR
              "severityNumber": 10,
              "severityText": "INFO2",
              "body": {
                "stringValue": "Faro was initialized"
              },
              "attributes": [
                {
                  "key": "context", // FARO: THIS IS THE LOG CONTEXT
                  "kvlistValue": [
                    { "key": "foo", "value": { "stringValue": "bar" } },
                    { "key": "baz", "value": { "stringValue": "bam" } }
                  ]
                },
                {
                  "key": "view.name", // FARO
                  "value": { "stringValue": "default" }
                },
                {
                  "key": "http.url", // OTEL SEMANTIC CONVENTIONS
                  // DISCUSS WITH TEAM
                  // Same as event
                  "value": { "stringValue": "http://localhost:5173" }
                }
              ]
              // The following are taken from the trace property
              // We can just omit them if they don't exist in the original payload
              // "traceId": "",
              // "spanId": ""
            },

            // +++ METRICS +++
            // Custom metric
            {
              // We don't have a timestamp in our payload
              // We'll just default to Date.now() * 1000000
              "timeUnixNano": 1674472126907000000,
              "attributes": [
                {
                  "key": "faro.measurement.type", // FARO
                  // DISCUSS WITH TEAM
                  // HOW TO DIFFERENTIATE FARO MEASUREMENTS IN THIS CASE
                  // What should be the name of this attribute?
                  "value": { "stringValue": "custom" }
                },
                {
                  "key": "faro.measurement.name", // FARO
                  "value": { "stringValue": "my_custom_metric" }
                },
                {
                  "key": "faro.measurement.name", // FARO
                  "value": { "stringValue": "my_custom_metric" }
                },
                {
                  "key": "faro.measurement.value", // FARO
                  "value": { "doubleValue": 0.2509985978371605 }
                },
                {
                  "key": "session.id", // FARO
                  "value": { "stringValue": "abcdefg" }
                },
                {
                  "key": "session.attributes", // FARO
                  "value": { "kvlistValue": [] }
                },

                // Taken from GENERAL IDENDITY ATTRIBUTES. Some may differ from Faro, some only exist in Faro.
                // https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/span-general.md#general-identity-attributes
                {
                  "key": "enduser.id", // OTEL SEMANTIC CONVENTIONS
                  "value": { "stringValue": "119" }
                },
                {
                  "key": "enduser.name", // FARO
                  "value": { "stringValue": "119" }
                },
                {
                  "key": "enduser.email", // FARO
                  "value": { "stringValue": "119" }
                },
                {
                  "key": "enduser.attributes", // FARO
                  "value": { "kvlistValue": [] }
                }

                // DON'T FORGET ABOUT PAGE METAS ETC.
              ]
            }
          ]
        }
      ]
    }
  ]
}
